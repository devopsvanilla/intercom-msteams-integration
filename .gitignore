# ==================================
# Teams-Intercom Integration .gitignore
# ==================================
# Comprehensive .gitignore for Python, Node.js, Docker, Azure, and VS Code development
# Based on GitHub's official templates and security best practices

# ==================================
# Sensitive Information & Secrets
# ==================================
# Environment files with credentials
.env
.env.local
.env.*.local
.env.development
.env.production
.env.staging
.env.test

# Configuration files with sensitive data
config.json
secrets.json
appsettings.json
appsettings.*.json

# API keys and tokens
*.key
*.pem
*.p12
*.pfx
*.crt
*.cer
*_rsa
*_dsa
*_ecdsa
*_ed25519

# Azure specific
.azure/
azuredeploy.parameters.json
azuredeploy.parameters.*.json

# Microsoft Graph & Teams app secrets
manifest.json
*.zip

# Intercom webhook secrets
intercom_secret.txt

# ==================================
# Python
# ==================================
# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/
cover/

# Translations
*.mo
*.pot

# Django stuff (if used):
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff (if used):
instance/
.webassets-cache

# Scrapy stuff (if used):
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
.pybuilder/
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
#   For a library or package, you might want to ignore these files since the code is
#   intended to run in multiple environments; otherwise, check them in:
.python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
Pipfile.lock

# poetry
#   Similar to Pipfile.lock, it is generally recommended to include poetry.lock in version control.
#   This is especially recommended for binary packages to ensure reproducibility, and is more
#   commonly ignored for libraries.
#   https://python-poetry.org/docs/basic-usage/#commit-your-poetrylock-file-to-version-control
poetry.lock

# pdm
#   Similar to Pipfile.lock, it is generally recommended to include pdm.lock in version control.
pdm.lock
#   pdm stores project-wide configurations in .pdm.toml, but it is recommended to not include it
#   in version control.
#   https://pdm.fming.dev/#use-with-ide
.pdm.toml

# PEP 582
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# pytype static type analyzer
.pytype/

# Cython debug symbols
cython_debug/

# FastAPI specific
fastapi_cache/

# ==================================
# Node.js & Frontend
# ==================================
# Logs
logs
npm-debug.log*
yarn-debug.log*
yarn-error.log*
lerna-debug.log*
.pnpm-debug.log*

# Diagnostic reports (https://nodejs.org/api/report.html)
report.[0-9]*.[0-9]*.[0-9]*.[0-9]*.json

# Runtime data
pids
*.pid
*.seed
*.pid.lock

# Directory for instrumented libs generated by jscoverage/JSCover
lib-cov

# Coverage directory used by tools like istanbul
coverage/
*.lcov

# nyc test coverage
.nyc_output

# Grunt intermediate storage (https://gruntjs.com/creating-plugins#storing-task-files)
.grunt

# Bower dependency directory (https://bower.io/)
bower_components

# node-waf configuration
.lock-wscript

# Compiled binary addons (https://nodejs.org/api/addons.html)
build/Release

# Dependency directories
node_modules/
jspm_packages/

# Snowpack dependency directory (https://snowpack.dev/)
web_modules/

# TypeScript cache
*.tsbuildinfo

# Optional npm cache directory
.npm

# Optional eslint cache
.eslintcache

# Optional stylelint cache
.stylelintcache

# Microbundle cache
.rpt2_cache/
.rts2_cache_cjs/
.rts2_cache_es/
.rts2_cache_umd/

# Optional REPL history
.node_repl_history

# Output of 'npm pack'
*.tgz

# Yarn Integrity file
.yarn-integrity

# dotenv environment variable files
.env.development.local
.env.test.local
.env.production.local
.env.local

# parcel-bundler cache (https://parceljs.org/)
.cache
.parcel-cache

# Next.js build output
.next
out

# Nuxt.js build / generate output
.nuxt
dist

# Gatsby files
.cache/
# Comment in the public line in if your project uses Gatsby and not Next.js
# https://nextjs.org/blog/next-9-1#public-directory-support
# public

# vuepress build output
.vuepress/dist

# vuepress v2.x temp and cache directory
.temp
.cache

# Docusaurus cache and generated files
.docusaurus

# Serverless directories
.serverless/

# FuseBox cache
.fusebox/

# DynamoDB Local files
.dynamodb/

# TernJS port file
.tern-port

# Stores VSCode versions used for testing VSCode extensions
.vscode-test

# yarn v2
.yarn/cache
.yarn/unplugged
.yarn/build-state.yml
.yarn/install-state.gz
.pnp.*

# Vite specific
dist/
dist-ssr/
*.local

# ==================================
# VS Code & IDEs
# ==================================
.vscode/
.vscode/settings.json
.vscode/tasks.json
.vscode/launch.json
.vscode/extensions.json
.vscode/history

# Keep some useful VS Code configs but ignore personal settings
!.vscode/settings.json.example
!.vscode/launch.json.example
!.vscode/tasks.json.example

# IntelliJ / PyCharm
.idea/
*.swp
*.swo
*~

# Sublime Text
*.sublime-workspace
*.sublime-project

# Vim
*.swp
*.swo
*.tmp

# Emacs
*~
\#*\#
/.emacs.desktop
/.emacs.desktop.lock
*.elc
auto-save-list
tramp
.\#*

# ==================================
# Docker & Containers
# ==================================
# Docker
Dockerfile.local
docker-compose.override.yml
docker-compose.local.yml

# Container data and volumes
data/
logs/
nginx/ssl/*.pem
nginx/ssl/*.key
nginx/ssl/*.crt

# Backups
backups/

# Container logs
*.log

# ==================================
# Operating Systems
# ==================================
# Windows
Thumbs.db
Thumbs.db:encryptable
ehthumbs.db
ehthumbs_vista.db
*.stackdump
[Dd]esktop.ini
$RECYCLE.BIN/
*.cab
*.msi
*.msix
*.msm
*.msp
*.lnk

# macOS
.DS_Store
.AppleDouble
.LSOverride
Icon
._*
.DocumentRevisions-V100
.fseventsd
.Spotlight-V100
.TemporaryItems
.Trashes
.VolumeIcon.icns
.com.apple.timemachine.donotpresent
.AppleDB
.AppleDesktop
Network Trash Folder
Temporary Items
.apdisk

# Linux
*~
.fuse_hidden*
.directory
.Trash-*
.nfs*

# ==================================
# Cloud & CI/CD
# ==================================
# Azure
.azure/
azure-pipelines.yml.backup
*.azurePubxml

# AWS
.aws/

# Google Cloud
.gcloud/

# Terraform
*.tfstate
*.tfstate.*
.terraform/
.terraform.lock.hcl

# GitHub Actions (keep workflows but ignore local runners)
.github/actions-runner/

# ==================================
# Application Specific
# ==================================
# Project specific config files
config/teams_channels_config.json
config/local_config.json

# Temporary files and caches
temp/
tmp/
cache/

# Log files
*.log
logs/

# Database files
*.db
*.sqlite
*.sqlite3

# Backup files
*.bak
*.backup
*.old

# Archive files
*.zip
*.tar
*.tar.gz
*.rar
*.7z

# ==================================
# Security & Monitoring
# ==================================
# Security scan results
.bandit
security-scan-results.json

# Performance profiling
*.prof
*.profdata

# Monitoring and telemetry
telemetry/
metrics/

# ==================================
# Documentation Build
# ==================================
# Sphinx
_build/
.doctrees/

# MkDocs
site/

# Gitbook
_book/

# ==================================
# Package Manager Locks (Keep These)
# ==================================
# Keep package-lock.json for Node.js projects
# !package-lock.json
# Keep yarn.lock for Yarn projects
# !yarn.lock
# Keep Pipfile.lock for Pipenv projects
# !Pipfile.lock

# ==================================
# Custom Project Files to Ignore
# ==================================
# Add any project-specific files or patterns here
# Example:
# custom_data/
# user_uploads/
# Python Development
__pycache__/
*.py[cod]
*$py.class
*.so
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# Virtual Environment
.venv/
venv/
ENV/
env/

# Testing
.pytest_cache/
.coverage
htmlcov/
.tox/
.nox/
coverage.xml
*.cover
*.py,cover
.hypothesis/

# Type Checking
.mypy_cache/
.dmypy.json
dmypy.json

# IDEs
.vscode/settings.json
.idea/
*.swp
*.swo
*~

# Environment files
.env
.env.local
.env.development
.env.production

# Logs
logs/
*.log

# Database
*.db
*.sqlite3

# Cache
.cache/
.ruff_cache/

# OS
.DS_Store
Thumbs.db

# Python Development
__pycache__/
*.py[cod]
*$py.class
*.so
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# Virtual Environment
.venv/
venv/
ENV/
env/

# Testing
.pytest_cache/
.coverage
htmlcov/
.tox/
.nox/
coverage.xml
*.cover
*.py,cover
.hypothesis/

# Type Checking
.mypy_cache/
.dmypy.json
dmypy.json

# IDEs
.vscode/settings.json
.idea/
*.swp
*.swo
*~

# Environment files
.env
.env.local
.env.development
.env.production

# Logs
logs/
*.log

# Database
*.db
*.sqlite3

# Cache
.cache/
.ruff_cache/

# OS
.DS_Store
Thumbs.db

# Python Development
__pycache__/
*.py[cod]
*$py.class
*.so
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# Virtual Environment
.venv/
venv/
ENV/
env/

# Testing
.pytest_cache/
.coverage
htmlcov/
.tox/
.nox/
coverage.xml
*.cover
*.py,cover
.hypothesis/

# Type Checking
.mypy_cache/
.dmypy.json
dmypy.json

# IDEs
.vscode/settings.json
.idea/
*.swp
*.swo
*~

# Environment files
.env
.env.local
.env.development
.env.production

# Logs
logs/
*.log

# Database
*.db
*.sqlite3

# Cache
.cache/
.ruff_cache/

# OS
.DS_Store
Thumbs.db
